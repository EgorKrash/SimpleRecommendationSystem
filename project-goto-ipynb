{"metadata": {"anaconda-cloud": {"attach-environment": true, "url": "https://anaconda.org/egrkr/project-goto", "environment": "Root"}, "kernelspec": {"name": "Python [Root]", "display_name": "Python [Root]", "language": "python"}, "environment": {"name": "Root", "prefix": "C:\\Users\\home\\Anaconda3\\envs\\Root"}, "language_info": {"mimetype": "text/x-python", "file_extension": ".py", "name": "python", "codemirror_mode": {"name": "ipython", "version": 3}, "version": "3.5.1", "nbconvert_exporter": "python", "pygments_lexer": "ipython3"}}, "nbformat_minor": 0, "nbformat": 4, "cells": [{"metadata": {}, "cell_type": "markdown", "source": "<p>\u0410\u0432\u0442\u043e\u0440:<br>\u041a\u0440\u0430\u0448\u0435\u043d\u0438\u043d\u043d\u0438\u043a\u043e\u0432 \u0415\u0433\u043e\u0440<br>\u0412\u0435\u0440\u0441\u0438\u044f python: 3.5.1</p>"}, {"metadata": {}, "cell_type": "markdown", "source": "<h1 align=\"center\">\u041e\u0442\u0431\u043e\u0440\u043e\u0447\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f GoTo ML</h1>"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\n<strong>\u041f\u0430\u043d\u0435\u043b\u044c \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438:</strong><br>\n<a href=\"#task1\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1</a><br>\n<a href=\"#task2\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2</a><br>\n<a href=\"#task3\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3</a>\n</p>"}, {"metadata": {}, "cell_type": "markdown", "source": "<h2>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f</h2>\n\n<p>\u0412 \u044d\u0442\u043e\u043c \u043e\u0442\u0447\u0435\u0442\u0435 \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0442\u0443\u043f\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0448\u043a\u043e\u043b\u044b <b>GoTo 2016</b>. \u0417\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u043e\u0439 \u0440\u0435\u0430\u043b\u044c\u043d\u0443\u044e \u0437\u0430\u0434\u0430\u0447\u0443 \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u044b \u043f\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u2013 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 <span style=\"color: blue\";>E-Contenta</span> \u043f\u0440\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0434\u0432\u0438\u0436\u043a\u0430 \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f <span style=\"color: blue\";>Tviz.tv</span> \u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0437\u0430\u0434\u0430\u0447. \u0414\u043b\u044f \u0438\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d <a href=\"https://yadi.sk/d/SqsWFcpds9rTL\" target=\"_blank\">\u043f\u0430\u043a\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445</a>, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 \u0444\u0430\u0438\u043b\u043e\u0432:</p>\n<ol>\n<li><b>train_likes.csv</b> - \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u043e\u043c\u0443 \u0437\u0440\u0438\u0442\u0435\u043b\u044e \u043a\u0430\u043a\u0438\u0435 \u0444\u0438\u043b\u044c\u043c\u044b \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u043b\u0438\u0441\u044c.</li>\n<li><b>items.json</b> - \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0438\u043b\u044c\u043c\u043e\u0432.</li>\n<li><b>schedule.csv</b> - \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0438\u043b\u044c\u043c\u043e\u0432.</li>\n</ol>\n"}, {"metadata": {}, "cell_type": "markdown", "source": "<h2>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438:</h2>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [], "execution_count": 1, "cell_type": "code", "source": "import json\nimport pandas as pd\nimport numpy as np\nimport random\nfrom sklearn import preprocessing\nimport warnings\nwarnings.filterwarnings('ignore')\n\nwith open('items.json') as f:\n    items_dicts = json.load(f)   #to list of dicts\n\ntrain_likes_df = pd.read_csv('train_likes.csv')   #to data frame"}, {"metadata": {}, "cell_type": "markdown", "source": "<h2>\u0412\u0432\u043e\u0434\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438:</h2> \n<p><b>length_columns</b> - \u0432\u044b\u0441\u043e\u0442\u0430 <b>dataframe</b>-\u0430 (<b>train_likes</b>), \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u044b\u0441\u043e\u0442\u0443 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u044d\u0442\u043e \u043d\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0438\u0430\u043b\u044c\u043d\u043e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043e\u043d\u0438 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b. </p>\n<p><b>my_dict_IdGenres</b> - \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0443\u0442 \u043f\u0430\u0440\u044b - <span style=\"color: green\";>id</span> \u0444\u0438\u043b\u044c\u043c\u0430 \u0438 \u0435\u0433\u043e \u0436\u0430\u043d\u0440, \u043a\u0430\u043a \u043a\u043b\u044e\u0447 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.</p>\n\n<p>(id, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u0437\u0435\u043b\u0435\u043d\u044b\u043c, \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 id \u0444\u0438\u043b\u044c\u043c\u0430; \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442\u0441\u044f id, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u043a\u0440\u0430\u0441\u043d\u044b\u043c, \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u043a id \u043a\u0430\u043d\u0430\u043b\u0430)</p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [], "execution_count": 2, "cell_type": "code", "source": "length_columns = train_likes_df['item_id'].count()\n\nmy_dict_IdGenres = {}                                #conversion (film's id: its genre)\nfor i in range(len(items_dicts)):\n    my_dict_IdGenres[items_dicts[i]['id']] = items_dicts[i]['genre']"}, {"metadata": {}, "cell_type": "markdown", "source": "<a name=\"task1\"></a>\n<h2>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1</h2>\n<h3>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f</h3>\n<ol>\n    <li>\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043b\u0430\u0439\u043a\u043e\u0432 \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u043a\u0430\u043d\u0430\u043b\u0435.</li>\n    <li>\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u0438\u043c\u0435\u044e\u0449\u0438\u0445 &ge;5 \u043b\u0430\u0439\u043a\u043e\u0432.</li>\n<ol>"}, {"metadata": {}, "cell_type": "markdown", "source": "<h3>\u0427\u0430\u0441\u0442\u044c I</h3>\n<p>\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432 \u043d\u0430 \u043a\u0430\u043d\u0430\u043b \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0441\u0435\u0445 \u043b\u0430\u0439\u043a\u043e\u0432 \u043d\u0430 \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432.\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0441\u0435\u0445 \u043b\u0430\u0439\u043a\u043e\u0432 \u0440\u0430\u0432\u043d\u043e \u0432\u044b\u0441\u043e\u0442\u0435 <b>dataframe</b>-\u0430 (<b>train_likes</b>), \u0430 \u044d\u0442\u043e \u0438 \u0435\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 <b>length_columns</b>. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c, \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043a \u043a\u043e\u043b\u043e\u043d\u043a\u0435 <em>channel</em> \u0444\u0443\u043d\u043a\u0446\u0438\u044e <span style=\"color: blue\";>nunique()</span>. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u043c \u0441 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u043e \u0434\u0432\u0443\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439.</p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"name": "stdout", "text": "106.05 - \u043b\u0430\u0439\u043a\u043e\u0432 \u0443 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u0430\u043d\u0430\u043b\u0430 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c.\n", "output_type": "stream"}], "execution_count": 3, "cell_type": "code", "source": "different_channels = train_likes_df['channel'].nunique()  \nprint(round(length_columns/different_channels,2),'- \u043b\u0430\u0439\u043a\u043e\u0432 \u0443 \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u0430\u043d\u0430\u043b\u0430 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c.')"}, {"metadata": {}, "cell_type": "markdown", "source": "<a name=\"top\"></a>\n<h3>\u0427\u0430\u0441\u0442\u044c II</h3>\n<p>\u0427\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0438\u043b\u044c\u043c\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e &ge; 5 \u043b\u0430\u0439\u043a\u043e\u0432, \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c <b>my_dict_IdLikes</b>, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u043c \u0437\u0430\u043d\u043e\u0441\u0438\u0442\u044c \u043f\u0430\u0440\u044b - <span style=\"color: green\";>id</span> \u0444\u0438\u043b\u044c\u043c\u0430 \u0438 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u0435\u0433\u043e \u043b\u0430\u0439\u043a\u043d\u0443\u043b\u0438. \u041f\u0440\u043e\u0445\u043e\u0434\u044f \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u043e <span style=\"color: green\";>id</span> \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0444\u0438\u043b\u044c\u043c\u0430 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 (<b>train_likes</b>), \u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u0443\u0436\u0435 \u0442\u0430\u043a\u043e\u0439 <span style=\"color: green\";>id</span> (\u043a\u043b\u044e\u0447). \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 - \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0430\u0440\u0443 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0430\u0432\u043d\u044b\u043c \u0435\u0434\u0438\u043d\u0438\u0446\u0435 (\u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u043b\u0430\u0439\u043a\u043d\u0443\u043b\u0438). \u0415\u0441\u043b\u0438 \u0434\u0430 - \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 1 \u043f\u043e \u043a\u043b\u044e\u0447\u0443 (<span style=\"color: green\";>id</span>).</p>\n<p>\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e-\u0441\u0447\u0435\u0442\u0447\u0438\u043a <b>counter_MoreThanFive</b>, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u043c \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044e (&ge;5). \u041f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044f, \u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 &ge;5 - \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043d\u0430 1.</p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"name": "stdout", "text": "4524 - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b 5 \u043b\u0430\u0439\u043a\u043e\u0432.\n", "output_type": "stream"}], "execution_count": 4, "cell_type": "code", "source": "my_dict_IdLikes = {}\n\n#__main_cycle__==================================================================\nfor i in range(length_columns):\n    \n    id = train_likes_df['item_id'].loc[i]\n    \n    if id not in my_dict_IdLikes:\n        my_dict_IdLikes[id] = 1\n    else:\n        my_dict_IdLikes[id] += 1\n        \n#__output__=====================================================================\ncounter_MoreThanFive = 0\nfor value in my_dict_IdLikes.values():\n    if value >= 5:\n        counter_MoreThanFive += 1\n\nprint(counter_MoreThanFive,'- \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b 5 \u043b\u0430\u0439\u043a\u043e\u0432.')"}, {"metadata": {}, "cell_type": "markdown", "source": "<em>Created using matplotlib</em><img src=\"https://pp.vk.me/c630216/v630216331/50a97/w3YQNCiDoEk.jpg\", align=\"left\",width=\"400\">"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\n<a name=\"task2\"></a>\n<strong>\u041f\u0430\u043d\u0435\u043b\u044c \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438:</strong><br>\n<a href=\"#task1\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1</a><br>\n<a href=\"#task3\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3</a>\n</p>"}, {"metadata": {}, "cell_type": "markdown", "source": "<h2>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2</h2>\n<h3>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f</h3>\n<ol>\n    <li>\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0441\u0443\u043c\u043c\u0443 \u043b\u0430\u0439\u043a\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0436\u0430\u043d\u0440\u0430 \u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e - \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u0433\u0434\u0435 \u0436\u0430\u043d\u0440 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u0435\u043d. \u0412\u044b\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u044b\u0432\u043e\u0434\u0430.</li>\n    <li>\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0442\u0430\u043a\u0443\u044e \u0436\u0435 \u0441\u0443\u043c\u043c\u0443 \u043b\u0430\u0439\u043a\u043e\u0432 \u043f\u043e \u0436\u0430\u043d\u0440\u0430\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0442\u043e\u043f-10 \u0441\u0430\u043c\u044b\u0445 \u0437\u0430\u043b\u0430\u0439\u043a\u0430\u043d\u043d\u044b\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432. \u0423\u043a\u0430\u0437\u0430\u0442\u044c \u043a \u043a\u0430\u043a\u043e\u043c\u0443 \u043a\u0430\u043d\u0430\u043b\u0443 \u043e\u043d\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f.</li>\n</ol>\n\n<a name=\"mid\"></a>\n<h3>\u0427\u0430\u0441\u0442\u044c I</h3>\n<p>\u0412\u0432\u043e\u0434 \u0441\u043b\u043e\u0432\u0430\u0440\u044f <b>genres</b>, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0443\u0442 \u043f\u0430\u0440\u044b - \u0436\u0430\u043d\u0440 \u0438 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u0435\u0433\u043e \u043b\u0430\u0439\u043a\u043d\u0443\u043b\u0438. \u0416\u0430\u043d\u0440 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 10 \u0437\u0434\u0435\u0441\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0440\u043e\u043b\u044c \u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0430 \u0444\u0438\u043b\u044c\u043c\u043e\u0432 \u0441 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u043c \u0436\u0430\u043d\u0440\u043e\u043c. \u0414\u0430\u043b\u0435\u0435 \u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u0447\u0442\u043e \u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u0447\u0430\u0441\u0442\u0438, \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043c\u0435\u0441\u0442\u043e <span style=\"color: green\";>id</span> \u0444\u0438\u043b\u044c\u043c\u0430 \u0437\u0434\u0435\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0436\u0430\u043d\u0440\u0430. </p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"name": "stdout", "text": "14007 28151 14237 5231 2494 6543 4383 1167 27 0 35011 ", "output_type": "stream"}], "execution_count": 5, "cell_type": "code", "source": "genres = {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0}\n\n#__main_cycle__==================================================================\nfor i in range(length_columns): \n    \n    id = train_likes_df['item_id'].loc[i]\n    \n    if id not in my_dict_IdGenres:\n        genres[10] += 1\n        \n    else:\n        genre = my_dict_IdGenres[id]\n        genres[genre] += 1\n\n#__output__=====================================================================\nfor n in sorted(genres.items()):\n    print(n[1],end=' ')"}, {"metadata": {}, "cell_type": "markdown", "source": "<em>Created using matplotlib</em><img src=\"https://pp.vk.me/c630216/v630216331/50a9f/51icHItYIJs.jpg\", align=\"left\",width=\"500\">"}, {"metadata": {}, "cell_type": "markdown", "source": "<h3>\u0427\u0430\u0441\u0442\u044c II</h3>\n<p>\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <span style=\"color: blue\";>checking</span>, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0430 \u0440\u0430\u0437\u0430 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u043a\u0443\u0441\u043e\u043a \u043a\u043e\u0434\u0430:</p>"}, {"metadata": {"trusted": true, "collapsed": true}, "outputs": [], "execution_count": 6, "cell_type": "code", "source": "def checking(genre):\n    if channel in my_dict_ChannelLikes:\n        my_dict_ChannelLikes[channel][genre] += 1\n        \n    else:\n        my_dict_ChannelLikes[channel] = {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0}\n        my_dict_ChannelLikes[channel][genre] += 1"}, {"metadata": {}, "cell_type": "markdown", "source": "<h4>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438:</h4>\n<p>\u0412\u044b\u0437\u044b\u0432\u0430\u044f \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432 \u0446\u0438\u043a\u043b\u0435, \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 <b>my_dict_ChannelLikes</b> \u043a\u043b\u044e\u0447 <em>channel</em> (\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u0441\u0441\u044b\u043b\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u043d\u0430 <span style=\"color: red\";>id</span> \u043a\u0430\u043d\u0430\u043b\u0430). \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043a\u043b\u044e\u0447\u0443 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0436\u0430\u043d\u0440\u043e\u0432, \u0442\u0430\u043a\u043e\u0439 \u0436\u0435, \u043a\u0430\u043a \u0438 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0438 \u0432 \u043d\u0435\u043c  \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 1 \u043f\u043e \u043a\u043b\u044e\u0447\u0443 <em>genre</em> (\u0430\u0433\u0440\u0443\u043c\u0435\u043d\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438). \u0415\u0441\u043b\u0438 \u0434\u0430, \u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u0436\u0430\u043d\u0440\u0443 \u043d\u0430 1. </p>"}, {"metadata": {"trusted": true, "collapsed": true}, "outputs": [], "execution_count": 7, "cell_type": "code", "source": "my_dict_ChannelLikes = {}\n\n#__main_cycle__==================================================================\nfor i in range(length_columns):\n    \n    id = train_likes_df['item_id'].loc[i]\n    channel = train_likes_df['channel'].loc[i]\n    \n    if id not in my_dict_IdGenres:\n        checking(10)\n            \n    else:\n        Genre = my_dict_IdGenres[id]\n        checking(Genre)"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u041f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u0432\u044b\u0448\u0435\u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445: <b>my_dict_ChannelLikes</b> = {channel1:{genre1:a,genre2:b...},channel2:{genre1:c,genre2:d...}...}.<br>\n\u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044d\u0442\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f (<b>my_dict_ChannelLikes</b>) \u0437\u043d\u0430\u0447\u0438\u0442 , \u0447\u0442\u043e \u043d\u0430 \u043a\u0430\u043d\u0430\u043b\u0435 <u>channelX</u> \u0444\u0438\u043b\u044c\u043c \u0441 \u0436\u0430\u043d\u0440\u043e\u043c <u>genreY</u> \u043b\u0430\u0439\u043a\u043d\u0443\u043b\u0438 <u>K</u> \u0440\u0430\u0437.</p>"}, {"metadata": {"scrolled": true, "trusted": true, "collapsed": false}, "outputs": [{"name": "stdout", "text": "1)1f0e3dad99908345f7439f8ffabdffc4: 1138 2913 1750 0 13 0 487 0 0 0 2047 \n2)c74d97b01eae257e44aa9d5bade97baf: 2364 1689 873 496 366 209 13 0 0 0 2047 \n3)98f13708210194c475687be6106a3b84: 1882 1256 1806 3 6 0 46 0 1 0 1079 \n4)1ff1de774005f8da13f42943881c655f: 73 157 23 111 70 3500 0 0 0 0 1919 \n5)70efdf2ec9b086079795c442636b55fb: 684 99 494 332 213 29 0 0 0 0 2768 \n6)c0c7c76d30bd3dcaefc96f40275bdc0a: 50 391 315 0 12 0 1095 0 0 0 1394 \n7)f90f2aca5c640289d0a29417bcb63a37: 507 281 76 71 0 0 13 0 21 0 2068 \n8)6f4922f45568161a8cdf4ad2299f6d23: 334 380 472 200 257 4 29 0 0 0 1249 \n9)4e732ced3463d06de0ca9a15b6153677: 31 1198 282 124 13 0 3 0 0 0 877 \n10)5c936263f3428a40227908d5a3847c0b: 1187 546 380 4 0 0 6 0 0 0 360 \n", "output_type": "stream"}], "execution_count": 8, "cell_type": "code", "source": "#__output__=====================================================================     \nfor n in range(10):\n    top_channel = max(my_dict_ChannelLikes.items(), key = lambda x: sum(x[1].values()))\n    \n    print(str(n+1) + ')' + top_channel[0], end=': ')\n    for item in sorted(top_channel[1].items()):\n        print(item[1],end = ' ')\n        \n    print()\n    \n    del my_dict_ChannelLikes[top_channel[0]]"}, {"metadata": {}, "cell_type": "markdown", "source": "<h4>\u041f\u0440\u0438\u043d\u0446\u0438\u043f \u0432\u044b\u0432\u043e\u0434\u0430:</h4>\n<ul>\n    <li>\u0418\u0437 \u0432\u0441\u0435\u0445 \u0441\u0443\u043c\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u043c \u0436\u0430\u043d\u0440\u043e\u0432 ({channelX:<u>{genre1:a,genre2:b...}</u>) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f.</li>\n    <li><b>top_channels</b> \u043f\u0440\u0438\u0441\u0432\u0430\u0435\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0442\u0435\u0436, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 \u043a\u043b\u044e\u0447\u0430 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0436\u0430\u043d\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0443\u043c\u043c\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430.</li>\n    <li>\u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 <b>top_channels</b> - <span style=\"color: red\";>id</span> \u043a\u0430\u043d\u0430\u043b\u0430.</li>\n    <li>\u0412\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 - \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0436\u0430\u043d\u0440\u043e\u0432. \u041e\u043d \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f (\u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e \u043a\u043b\u044e\u0447\u0430-\u0436\u0430\u043d\u0440\u0430) \u0438 \u0432\u044b\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0443.</li>\n    <li>\u0418\u0437 <b>my_dict_ChannelLikes</b> \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0430\u0440\u0430 \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u043e\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044e \u0436\u0430\u043d\u0440\u043e\u0432.</li>\n    <li>\u0412\u0441\u0435 \u0432\u044b\u0448\u0435\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442\u0441\u044f 10 \u0440\u0430\u0437 (\u0442\u043e\u043f 10 \u0437\u0430\u043b\u0430\u0439\u043a\u0430\u043d\u044b\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432).</li>\n</ul>"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\n<a name=\"task3\"></a>\n<strong>\u041f\u0430\u043d\u0435\u043b\u044c \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438:</strong><br>\n<a href=\"#task1\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1</a><br>\n<a href=\"#task2\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2</a>\n</p>"}, {"metadata": {}, "cell_type": "markdown", "source": "<h2>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3</h2>\n<h3>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f</h3>\n<p>\u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0445 (train_likes.csv, items.json, schedule.csv) \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u0432 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 - \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b (id_\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, id_\u0444\u0438\u043b\u044c\u043c\u0430, \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f) \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043b\u0430\u0439\u043a\u0430.</p>"}, {"metadata": {}, "cell_type": "markdown", "source": "<h3>\u0425\u043e\u0434 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438</h3>\n\n<ul>\n\n<li>\u0421\u0434\u0435\u043b\u0430\u0442\u044c <b>dataframe</b> \u0438\u0437 <b>items.json</b> \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438 (film's) <b>id</b>, <b>year</b>, <b>likes</b>, <b>genre</b> (\u0434\u043b\u044f genre \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c one hot encoding).</li> \n\n<li>\u041d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 <b>year</b> (0-1).</li>\n\n<li>\u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <span style=\"color: blue\";>dist</span>, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \"\u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435\" \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u0438\u043b\u044c\u043c\u0430\u043c\u0438. \u0427\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u0442\u0435\u043c \u043c\u0435\u043d\u0435\u0435 \u043f\u043e\u0445\u043e\u0436\u0438 \u0444\u0438\u043b\u044c\u043c\u044b.</li>\n\n<li>\u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <span style=\"color: blue\";>get_max_likes</span>, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0436\u0430\u043d\u0440\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432 \u0443 \u0444\u0438\u043b\u044c\u043c\u0430 \u044d\u0442\u043e\u0433\u043e \u0436\u0430\u043d\u0440\u0430.</li>\n\n<li>\u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <span style=\"color: blue\";>liked_films</span>, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b \u043b\u0430\u0439\u043a.</li>\n\n<li>\u0412 \u043a\u043e\u043d\u0446\u0435 \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <span style=\"color: blue\";>user_likes_film</span>, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e <b>user_id</b> and <b>film_id</b> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c, \u0447\u0442\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u043c.</li>\n\n</ul>\n\n\n<h4>\u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:</h4>\n\n<p>\u0415\u0441\u043b\u0438 \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u043c\u0435\u0436\u0434\u0443 <u>\u043b\u044e\u0431\u044b\u043c</u> \u0438\u0437 \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u043b\u0430\u0439\u043a\u043d\u0443\u043b, \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0444\u0438\u043b\u044c\u043c\u043e\u043c <b>new_film</b>, \u043c\u0435\u043d\u044c\u0448\u0435 1.1 (\u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043e \u0447\u0442\u043e \u043e\u043a\u043e\u043b\u043e 10% \u0444\u0438\u043b\u044c\u043c\u043e\u0432 \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442 \u0432 \u0442\u0430\u043a\u043e\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0438\u043b\u044c\u043c\u0430, \u043b\u0430\u0439\u043a\u043d\u0443\u0442\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c), \u0442\u043e \u043c\u044b \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043a\u0430\u043a:</p>\n\n<p><strong>p = likes_of_new_film/ max_likes_for_new_film_genre</strong>,</p>\n\n<p>\u0433\u0434\u0435<br> \n<b>max_likes_for_new_film_genre</b> - \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <b>get_max_likes</b> \u0434\u043b\u044f \u0436\u0430\u043d\u0440\u0430 \u0444\u0438\u043b\u044c\u043c\u0430 <b>new_film.</b><br>\n<b>likes_of_new_film</b> - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432 \u0443 \u0444\u0438\u043b\u044c\u043c\u0430 <b>new_film</b>.</p>\n\n<p>\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043c\u044b \u0441 \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c\u044e \u0431\u0443\u0434\u0435\u043c \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0444\u0438\u043b\u044c\u043c\u044b \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432.\n\n\u0415\u0441\u043b\u0438 \u0436\u0435 \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 1.1, \u043c\u044b \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u044d\u0442\u043e\u0442 \u0444\u0438\u043b\u044c\u043c \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0438 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0432\u043d\u0430 \u043d\u0443\u043b\u044e.\n\n\u0422\u0430\u043a\u0436\u0435 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u0438\u043d\u043e\u0433\u0434\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0440\u0430\u043d\u0434\u043e\u043c\u043d\u044b\u0435 \u0444\u0438\u043b\u044c\u043c\u044b. \u0421 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c\u044e 1% \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u043c \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u043e\u043a\u0430\u0437\u0430\u043b\u0430\u0441\u044c \u0431\u043e\u043b\u044c\u0448\u0435 1.1.</p>\n\n\n<h3>\u041d\u0438\u0436\u0435 \u0438\u0434\u0435\u0442 \u043a\u043e\u0434 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438 \u0435\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435</h3>\n\n\n<p>\u0423 \u043c\u0435\u043d\u044f \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c <strong>items.json</strong> \u0432 <strong>dataframe</strong> \u043e\u0431\u044b\u0447\u043d\u044b\u043c\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u0442\u0438\u043f\u0430 <b>pandas.read_json(filename)</b> \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 <strong>f_N</strong> \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0433\u0440\u043e\u043c\u043d\u0435\u0439\u0448\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043b\u043e\u043d\u043e\u043a (\u0438 \u0438\u0437-\u0437\u0430 \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0439 \u043d\u043e\u0443\u0442\u0431\u0443\u043a \u043a\u043e\u043d\u0435\u0447\u043d\u043e \u0436\u0435 \u0432\u044b\u0434\u0430\u0435\u0442 Memory Error), \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u043b \u0432\u0441\u0435 \"\u0432\u0440\u0443\u0447\u043d\u0443\u044e\" c \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0440\u0435\u0445 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043e\u0431\u0440\u0435\u0437\u0430\u0432 \u044d\u0442\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438 \u0441\u043e\u0437\u0434\u0430\u0432 \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u0431\u0435\u0437 \u043d\u0438\u0445. </p>\n<p>\u0418\u0442\u0430\u043a, \u0444\u0443\u043d\u043a\u0446\u0438\u044f <span style=\"color: blue\";>converting</span> \u0441\u043b\u0443\u0436\u0438\u0442 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 (\u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442) <b>column_id</b> \u0438\u0437 <b>dataframe</b> \u0432 <em>one hot encoding</em>.</p>\n"}, {"metadata": {"trusted": true, "collapsed": true}, "outputs": [], "execution_count": 9, "cell_type": "code", "source": "def converting(dataframe,column_id):\n\n    if column_id in dataframe:\n        one_hot_encoding = pd.get_dummies(dataframe[column_id].values)\n            \n        for column in one_hot_encoding.columns:\n            one_hot_encoding.rename(columns={column:column_id + '_' + str(column)}, inplace=True) #rename columns (1 -> genre_1)\n            \n        dataframe = dataframe.drop(column_id,axis=1)\n        dataframe = pd.concat([dataframe,one_hot_encoding],axis=1)\n        \n    else:\n        return dataframe\n            \n    return dataframe    "}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u0424\u0443\u043d\u043a\u0446\u0438\u044f <span style=\"color: blue\";>formatting</span> \"\u0432\u044b\u0440\u0435\u0437\u0430\u0435\u0442\" \u0438\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044f, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u043b\u0438\u0448\u044c \u043f\u0430\u0440\u044b \u0441 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 <b>id, genre, year</b>, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043f\u0430\u0440\u0443 \u0441 \u043a\u043b\u044e\u0447\u043e\u043c <b>likes</b> \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043b\u0430\u0439\u043a\u043e\u0432 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0444\u0438\u043b\u044c\u043c\u0435 (<span style=\"color: green\";>id</span> \u0438\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044f-\u0430\u0433\u0440\u0443\u043c\u0435\u043d\u0442\u0430) \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f (\u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0435\u0440\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044f <b>my_dict_IdLikes</b>/\u0441\u043c. \u0437\u0430\u0434\u0430\u0447\u0443 <a href=\"#top\">1.2</a>). \u0417\u0430\u0442\u0435\u043c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u044d\u0442\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438.</p>"}, {"metadata": {"trusted": true, "collapsed": true}, "outputs": [], "execution_count": 10, "cell_type": "code", "source": "def formatting(dic):\n    new_dic={}\n    for key in dic:\n        if key=='id' or key=='genre' or key=='year':\n            new_dic[key]=dic[key]\n            \n    if  new_dic['id'] in my_dict_IdLikes:  \n        new_dic['likes']=my_dict_IdLikes[new_dic['id']]\n    \n    return new_dic"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <span style=\"color: blue\";>open_json</span> \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439 (\u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 <b>items_dicts</b>, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0432 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435).</p>\n<p>\u041f\u0440\u043e\u0445\u043e\u0434\u044f \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u043c \u0441\u043f\u0438\u0441\u043a\u0430 \u043c\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043a \u043d\u0438\u043c <span style=\"color: blue\";>formatting</span> \u0438 \u0434\u0435\u043b\u0430\u0435\u043c \u0438\u0437 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f <b>dataframe</b> (\u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438) \u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0442\u0430\u043a\u0438\u0435 <b>dataframe</b>-\u044b \u0432 \u043e\u0434\u0438\u043d. \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443 <span style=\"color: blue\";>converting</span>.</p>"}, {"metadata": {"trusted": true, "collapsed": true}, "outputs": [], "execution_count": 11, "cell_type": "code", "source": "def open_json(file):\n    length=len(file)\n    df = pd.DataFrame({})\n    \n    for j in range(length):\n        new_dic=formatting(file[j])\n        data=pd.DataFrame(new_dic, index=[1])\n        df = pd.concat([df,data],ignore_index=True)\n        \n    return df"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u044d\u0442\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u044b\u0432\u0430\u0435\u043c <b>items_dicts</b> \u0432 <b>dataframe</b>.</p> \n<p>\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 <b>year</b>, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f <b>sklearn</b>. \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0430\u0440\u0443\u044e, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0443\u044e  \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 <b>dataframe</b> \u043a\u0430\u043a <em>csv</em>, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0435\u0440\u0435\u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043b\u0438\u0448\u043d\u0438\u0439 \u0440\u0430\u0437 (\u0432\u0441\u0435-\u0442\u0430\u043a\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043d\u0435 \u0431\u044b\u0441\u0442\u0440\u044b\u0439), \u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0442\u044c, \u0435\u0441\u043b\u0438 \u043d\u0430\u0434\u043e.</p>\n<p>\u0414\u0430\u043b\u0435\u0435 \u0432\u044b\u0432\u043e\u0434 \u043f\u0435\u0440\u0432\u044b\u0445 \u043f\u044f\u0442\u0438 \u0441\u0442\u0440\u043e\u043a \u043d\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u0447\u0442\u043e\u0431\u044b \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043f\u043e\u043b\u0443\u0447\u0448\u0435.</p>"}, {"metadata": {"trusted": true, "collapsed": true}, "outputs": [], "execution_count": 12, "cell_type": "code", "source": "df = open_json(items_dicts)\ndf = converting(df,'genre')\n\nnormilized_column = df['year'].values \nmin_max_scaler = preprocessing.MinMaxScaler()\nnormilized_column_scaled = min_max_scaler.fit_transform(normilized_column)\n\ndf = df.drop('year',axis=1)\ndf.insert(2,'year',pd.Series(normilized_column_scaled))\n\ndf.to_csv('items.csv',index=False)"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"metadata": {}, "data": {"text/plain": "                                 id  likes      year  genre_0  genre_1  \\\n0  cd3dc8b6cffb41e4163dcbd857ca87da  160.0  1.000000      1.0      0.0   \n1  30d69ba3457fbe63ddf07f88adbca502  176.0  1.000000      1.0      0.0   \n2  3d7fdbe4e37f0a7b1409001df2212fc2  378.0  0.991150      1.0      0.0   \n3  fe3c9604bff61b422dfaccc167173896    5.0  0.893805      0.0      1.0   \n4  9c372bc6fa306220ed6fbdd86d2f6bb1   26.0  0.814159      0.0      1.0   \n\n   genre_2  genre_3  genre_4  genre_5  genre_6  genre_7  genre_8  genre_9  \n0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0  \n1      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0  \n2      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0  \n3      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0  \n4      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0  ", "text/html": "<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>likes</th>\n      <th>year</th>\n      <th>genre_0</th>\n      <th>genre_1</th>\n      <th>genre_2</th>\n      <th>genre_3</th>\n      <th>genre_4</th>\n      <th>genre_5</th>\n      <th>genre_6</th>\n      <th>genre_7</th>\n      <th>genre_8</th>\n      <th>genre_9</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>cd3dc8b6cffb41e4163dcbd857ca87da</td>\n      <td>160.0</td>\n      <td>1.000000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>30d69ba3457fbe63ddf07f88adbca502</td>\n      <td>176.0</td>\n      <td>1.000000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3d7fdbe4e37f0a7b1409001df2212fc2</td>\n      <td>378.0</td>\n      <td>0.991150</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>fe3c9604bff61b422dfaccc167173896</td>\n      <td>5.0</td>\n      <td>0.893805</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9c372bc6fa306220ed6fbdd86d2f6bb1</td>\n      <td>26.0</td>\n      <td>0.814159</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"}, "execution_count": 19, "output_type": "execute_result"}], "execution_count": 19, "cell_type": "code", "source": "df.head()"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u0424\u0443\u043d\u043a\u0446\u0438\u044f <span style=\"color: blue\";>dist</span> \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:<br>\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0434\u0432\u0443\u0445 \u0444\u0438\u043b\u044c\u043c\u043e\u0432 \u0431\u0435\u0440\u0435\u0442\u0441\u044f \u0446\u0435\u043b\u044b\u0439 \u0440\u044f\u0434 \u0438\u0437 <b>dataframe</b>-\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0438\u0439 \u0432 \u0441\u0435\u0431\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 <span style=\"color: green\";>id</span> \u0444\u0438\u043b\u044c\u043c\u0430 \u0438 \u0437\u0430\u0442\u0435\u043c \u0432 \u044d\u0442\u043e\u043c \u0440\u044f\u0434\u0443 \u043e\u0431\u0440\u0435\u0437\u0430\u044e\u0442\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043e\u0442 \u043a\u043e\u043b\u043e\u043d\u043e\u043a <b>likes</b> \u0438 <b>id</b>. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0436\u0430\u043d\u0440\u0430 \u0438 \u0433\u043e\u0434\u0430. \u0417\u0430\u0442\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 <span style=\"color: blue\";>np.linalg.norm</span> \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0432\u0435\u043a\u0442\u043e\u0440\u0430\u043c\u0438.</p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"metadata": {}, "data": {"text/plain": "1.4181950896264528"}, "execution_count": 14, "output_type": "execute_result"}], "execution_count": 14, "cell_type": "code", "source": "def dist(film1, film2):\n    \n    film1_whole_row = df.loc[np.argmax(df['id'] == film1)]\n    film1_vec = film1_whole_row[2::]\n\n    film2_whole_row = df.loc[np.argmax(df['id'] == film2)]\n    film2_vec = film2_whole_row[2::]\n\n    d = np.linalg.norm(film1_vec-film2_vec)\n    return d\n\ndist('cd3dc8b6cffb41e4163dcbd857ca87da', 'fe3c9604bff61b422dfaccc167173896') #example (random films)"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c <b>Genres</b>. \u0412 \u0434\u0435\u0432\u044f\u0442\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 (\u0436\u0430\u043d\u0440) \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 (' ':0), \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0444\u0438\u043b\u044c\u043c\u043e\u0432 \u0441 \u0434\u0435\u0432\u044f\u0442\u044b\u043c \u0436\u0430\u043d\u0440\u043e\u043c \u043b\u0430\u0439\u043a\u043d\u0443\u0442\u043e \u043d\u0435 \u0431\u044b\u043b\u043e (\u043f\u0440\u0438 \u0442\u043e\u043c, \u0447\u0442\u043e \u0441\u0430\u043c\u0438 \u0444\u0438\u043b\u044c\u043c\u044b \u0441 \u0442\u0430\u043a\u0438\u043c \u0436\u0430\u043d\u0440\u043e\u043c \u0435\u0441\u0442\u044c. \u0432 \u044d\u0442\u043e\u043c \u043c\u043e\u0436\u043d\u043e \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f <a href=\"#mid\">\u0437\u0434\u0435\u0441\u044c</a>), \u0438, \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <span style=\"color:blue\";>get_max_likes</span> \u043e\u0442 9 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043d\u0443\u043b\u0435\u043c. </p>\n\n<p>\u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 <b>my_dict_IdLikes</b>. \u0415\u0441\u043b\u0438 \u0443 \u0444\u0438\u043b\u044c\u043c\u0430 \u0435\u0441\u0442\u044c \u0436\u0430\u043d\u0440, \u0437\u0430\u043d\u043e\u0441\u0438\u043c \u0432 <b>Genres</b> \u043f\u043e \u043a\u043b\u044e\u0447\u0443-\u0436\u0430\u043d\u0440\u0443 \u043f\u0430\u0440\u0443 <span style=\"color: green\";>id</span> \u0444\u0438\u043b\u044c\u043c\u0430 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432 \u043d\u0430 \u043d\u0435\u043c. </p>\n<p>\u0424\u0443\u043d\u043a\u0446\u0438\u044f <span style=\"color:blue\";>get_max_likes</span> \u0436\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432, \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0444\u0438\u043b\u044c\u043c\u0443 \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f. </p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"metadata": {}, "data": {"text/plain": "680"}, "execution_count": 15, "output_type": "execute_result"}], "execution_count": 15, "cell_type": "code", "source": "Genres={0:{},1:{},2:{},3:{},4:{},5:{},6:{},7:{},8:{},9:{' ':0}}\nfor key in my_dict_IdLikes.keys():\n    id = key\n    if id in my_dict_IdGenres:\n        genre = my_dict_IdGenres[id]\n        likes = my_dict_IdLikes[key]\n        \n        Genres[genre][id]=likes\n        \ndef get_max_likes(genre_id):\n    return max(Genres[genre_id].values())\n\nget_max_likes(0)"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\u0412 \u0441\u043b\u043e\u0432\u0430\u0440\u044c <b>my_dict_user_id_liked_films</b> \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043f\u0430\u0440\u044b - <b>user_id</b> \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u043b\u0430\u0439\u043a\u043d\u0443\u043b. <span style=\"color:blue\";>liked_films</span> \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (\u0441\u043f\u0438\u0441\u043e\u043a) \u043f\u043e \u043a\u043b\u044e\u0447\u0443 - \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f.</p>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"metadata": {}, "data": {"text/plain": "['79d1d57b54e299e8ecef56fd14cbb613',\n 'e178fe0133cd6a93487a6223065834ab',\n 'a0886341aae8fcf0d8507c4141d129b7']"}, "execution_count": 16, "output_type": "execute_result"}], "execution_count": 16, "cell_type": "code", "source": "my_dict_user_id_liked_films = {}\n\nfor i in range(length_columns):\n    user_id = train_likes_df['user_id'].loc[i]\n    item_id = train_likes_df['item_id'].loc[i]\n    \n    if user_id in my_dict_user_id_liked_films:\n        my_dict_user_id_liked_films[user_id].append(item_id)\n    else:\n        my_dict_user_id_liked_films[user_id] = [item_id]\n        \ndef liked_films(user_id):\n    return my_dict_user_id_liked_films[user_id]\n\nliked_films('ffd4bd3ab4e318bbaaf49ea3f5858f7d') #example (random user_id)"}, {"metadata": {}, "cell_type": "markdown", "source": "<h3>\u041f\u0440\u0438\u043d\u0446\u0438\u043f \u0440\u0430\u0431\u043e\u0442\u044b \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u0447\u0438</h3>\n<ul>\n    <li><b>films_liked_by_user</b> \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u043b\u044c\u043c\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0430\u0439\u043a\u043d\u0443\u043b \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 <b>user</b>.</li>\n    <li>\u041f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043a\u0443, \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u043b\u0438 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0444\u0438\u043b\u044c\u043c\u0430\u043c\u0438 (\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u043c \u0445\u043e\u0442\u044f \u0431\u044b \u0443 \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0438\u043b\u044c\u043c\u0430 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430).</li>\n    <li><b>new_film_whole_row</b> - \u0440\u044f\u0434 <b>dataframe</b>-\u0430 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0439 \u0442\u0435\u043c, \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b\u0438\u0441\u044c \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <span style=\"color: blue\";>dist</span>.</li>\n    <li>\u0412\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044d\u0442\u043e\u0433\u043e \u0440\u044f\u0434\u0430 - \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043b\u0430\u0439\u043a\u0430\u0445 \u043d\u0430 \u0444\u0438\u043b\u044c\u043c\u0435 - \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 <b>likes_of_new_film</b>.</li>\n    <li>\u0421\u0440\u0435\u0434\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 3-12 (\u0436\u0430\u043d\u0440 \u0444\u0438\u043b\u044c\u043c\u0430) \u0438\u0449\u0435\u0442\u0441\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 (\u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 \u043d\u0443\u043b\u0435\u0439 \u0438 \u0435\u0434\u0438\u043d\u0438\u0446\u044b). \u0422\u0430\u043a\u0438\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0436\u0430\u043d\u0440 \u0444\u0438\u043b\u044c\u043c\u0430 <b>new_film</b> \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 <b>genre_of_new_film</b>.</li>\n    <li><b>max_likes_for_new_film_genre</b> - \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <span style=\"color:blue\";>get_max_likes</span> \u043e\u0442 \u0436\u0430\u043d\u0440\u0430 \u0444\u0438\u043b\u044c\u043c\u0430 <b>new_film</b>.</li>\n    <li>\u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c, \u043f\u043e\u0434\u0435\u043b\u0438\u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432 \u0444\u0438\u043b\u044c\u043c\u0430 \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0430\u0439\u043a\u043e\u0432 , \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0444\u0438\u043b\u044c\u043c\u0443 \u0442\u0430\u043a\u043e\u0433\u043e \u0436\u0435 \u0436\u0430\u043d\u0440\u0430.</li>\n</ul>"}, {"metadata": {"trusted": true, "collapsed": false}, "outputs": [{"name": "stdout", "text": "0.56\n", "output_type": "stream"}], "execution_count": 17, "cell_type": "code", "source": "dist_max = 1.1 # if distance >= dist_max we would not recommend the film at all\ndef user_likes_film(user, new_film):\n    films_liked_by_user = liked_films(user)\n    probability = 0\n    \n    if new_film in films_liked_by_user: #case when user has already liked this film: return 1\n        probability = 1\n        \n        return probability\n    \n    for film in films_liked_by_user:\n        distance = dist(film, new_film)\n        if distance < dist_max:\n            new_film_whole_row = df.loc[np.argmax(df['id'] == new_film)]\n            \n            likes_of_new_film = new_film_whole_row[1]\n            genre_of_new_film = int(np.argmax(new_film_whole_row[3:12])[-1])\n            max_likes_for_new_film_genre = get_max_likes(genre_of_new_film)\n            \n            probability = likes_of_new_film / max_likes_for_new_film_genre\n            \n            return probability\n        \n    # sometimes we'd like to randomly recommend films regardless of distance\n    if random.random() < 0.01:\n        probability = 1\n    \n    return probability\n\nprint(round(user_likes_film('b1b9adddb1932221f48fcc9e0e3574fe','3d7fdbe4e37f0a7b1409001df2212fc2'),2))"}, {"metadata": {}, "cell_type": "markdown", "source": "<h2>\u0421\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u043d\u0435\u0434\u043e\u0447\u0435\u0442\u044b \u0432 \u0445\u043e\u0434\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447</h2>\n<ul>\n    <li>\u041e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0442\u0440\u0430\u0442\u0438\u043b \u043d\u0430 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 <b>json</b> \u0444\u0430\u0438\u043b\u0430 \u0432 <b>dataframe</b>. \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u044f \u043f\u043e\u043d\u044f\u043b, \u0447\u0442\u043e \u0432\u0441\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0441 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438 <b>f_N</b>, \u044f \u0438\u0441\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b \u043e\u043a\u043e\u043b\u043e \u043f\u043e\u043b\u0443\u0434\u044e\u0436\u0438\u043d\u044b \u0440\u0430\u0437\u043d\u044b\u0445 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439/\u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438\u0437 \u0440\u0430\u0437\u043d\u044b\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a, \u0438\u0441\u043a\u0430\u043b \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435, \u043f\u043e\u0447\u0435\u043c\u0443 \u0432\u044b\u043b\u0435\u0437\u0430\u0435\u0442 \u0442\u0430\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. \u0418\u0437-\u0437\u0430 \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0432\u0442\u043e\u0440\u0443\u044e \u0437\u0430\u0434\u0430\u0447\u0443 \u044f \u0440\u0435\u0448\u0430\u043b \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u043c\u0438.</li>\n\n    <li>\u041d\u0435\u043c\u0430\u043b\u043e \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u043f\u043e\u0442\u0440\u0430\u0442\u0438\u0442\u044c \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 <b>pandas</b>, \u043f\u043e\u0438\u0441\u043a \u043d\u0443\u0436\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 (<b>concat,insert,rename</b> \u0438 \u0434\u0440.) \u0438 \u0441\u043b\u0443\u0447\u0430\u0438 \u0438\u0445 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f.</li>\n    \n    <li>\u0424\u043e\u0440\u043c\u0443\u043b\u0430 \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043b\u0435\u043a\u043e \u043d\u0435 \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u0430\u044f.</li>\n</ul>"}, {"metadata": {}, "cell_type": "markdown", "source": "<p>\n<strong>\u041f\u0430\u043d\u0435\u043b\u044c \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438:</strong><br>\n<a href=\"#task1\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1</a><br>\n<a href=\"#task2\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2</a><br>\n<a href=\"#task3\">\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3</a>\n</p>"}, {"metadata": {}, "cell_type": "markdown", "source": "  "}, {"metadata": {"collapsed": true}, "cell_type": "markdown", "source": "<p>\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435!<br>\u0412\u0435\u0441\u044c \u043a\u043e\u0434, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043a\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432, \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0439\u0442\u0438 <a href=\"https://drive.google.com/open?id=0Bzdgm3OptRiXYktPN3ZtVnR6T3M\" target=\"_blank\">\u0437\u0434\u0435\u0441\u044c</a>.</p>"}]}